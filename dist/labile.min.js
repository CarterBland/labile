var Labile=function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(module,exports,__webpack_require__){eval("module.exports = __webpack_require__(1).default\n\n\n//# sourceURL=webpack://Labile/./index.js?")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/core/state/index.js\nclass StateObject {\n  constructor (state) {\n    if (typeof state === 'object' || state === undefined) {\n      this.buildState(this, state)\n    } else {\n      throw new Error('Type Error: data passed is not an object')\n    }\n  }\n\n  buildState (object, data) {\n    for (let dataKey in data) {\n      let state = this.buildAttribute(object, { key: dataKey, value: data[dataKey] })\n\n      if (typeof data[dataKey] === 'object') {\n        this.buildState(state, data[dataKey])\n      }\n    }\n  }\n\n  buildAttribute (object, data) {\n    object['_' + data.key] = data.value\n\n    object.__defineGetter__(data.key, () => {\n      return object['_' + data.key]\n    })\n\n    object.__defineSetter__(data.key, val => {\n      object['_' + data.key] = val\n\n      this.updateComponent()\n    })\n\n    return object['_' + data.key]\n  }\n\n  getStateObject (object = this) {\n    let stateObject = {}\n\n    for (let prop of Object.keys(object)) {\n      if (prop[0] === '_') {\n        if (typeof object[prop] === 'object') {\n          stateObject[prop.replace('_', '')] = this.getStateObject(object[prop])\n        } else {\n          stateObject[prop.replace('_', '')] = object[prop]\n        }\n      }\n    }\n\n    return stateObject\n  }\n}\n\n// CONCATENATED MODULE: ./src/core/virtualdom/maps.js\nclass Maps {\n  static mapState (state, text) {\n    for (let key of Object.keys(state)) {\n      text = text.replace(new RegExp('{{2} ?' + key + ' ?}{2}', 'g'), state[key])\n    }\n\n    return text\n  }\n\n  static mapAttributes (attributes, state = null) {\n    let attributeMap = {}\n\n    if (attributes.length) {\n      for (let attribute of attributes) {\n        if (state !== null) {\n          attributeMap[this.mapState(state, attribute)] = this.mapState(state, attributes[attribute])\n        } else {\n          attributeMap[attribute.name] = attribute.value\n        }\n      }\n    }\n\n    return attributeMap\n  }\n\n  static mapNodes (root) {\n    const nodeArray = []\n\n    for (let node of root) {\n      if (node.nodeType === 1 && node.nodeName !== 'SCRIPT') {\n        nodeArray.push({\n          type: node.nodeName,\n          attributes: this.mapAttributes(node.attributes),\n          children: node.childNodes.length ? this.mapNodes(node.childNodes) : []\n        })\n      } else {\n        if (node.nodeType === 3) {\n          nodeArray.push({\n            type: '#text',\n            text: node.nodeValue\n          })\n        }\n      }\n    }\n\n    return nodeArray\n  }\n\n  static mapVDOM (root, state) {\n    const nodeArray = []\n\n    for (let node of root) {\n      if (node.type !== '#text') {\n        nodeArray.push({\n          type: node.type,\n          attributes: this.mapAttributes(node.attributes, state),\n          children: this.mapVDOM(node.children, state)\n        })\n      } else {\n        nodeArray.push({\n          type: node.type,\n          text: this.mapState(state, node.text)\n        })\n      }\n    }\n\n    return nodeArray\n  }\n\n  static mapHTML (vDOM, root = null) {\n    if (root === null) {\n      root = document.createDocumentFragment()\n    }\n\n    for (let element of vDOM) {\n      if (element.type !== '#text') {\n        let newElement = document.createElement(element.type)\n\n        for (let key of Object.keys(element.attributes)) {\n          newElement.setAttribute(key, element.attributes[key])\n        }\n\n        newElement = this.mapHTML(element.children, newElement)\n        newElement.normalize()\n        root.appendChild(newElement)\n      } else {\n        let newTextElement = document.createTextNode(element.text)\n        root.appendChild(newTextElement)\n      }\n    }\n\n    return root\n  }\n}\n\n// CONCATENATED MODULE: ./src/core/virtualdom/index.js\n\n\nclass virtualdom_VirtualDOM {\n  constructor (root, state) {\n    this.root = root\n\n    this.state = state\n\n    this.sotDOM = this.generateVDOM(root)\n\n    this.currentVirtualDOM = []\n\n    this.buildDOM(state)\n  }\n\n  generateVDOM (root) {\n    root.constructor.name === 'HTMLCollection' ? root[0].normalize() : root.normalize()\n\n    return Maps.mapNodes(root)\n  }\n\n  generateVDOMWithState () {\n    this.currentVirtualDOM = Maps.mapVDOM(this.sotDOM, this.state)\n\n    return this.currentVirtualDOM\n  }\n\n  buildDOM (state) {\n    this.state = state\n\n    let docFrag = Maps.mapHTML(this.generateVDOMWithState()[0].children)\n\n    window.requestAnimationFrame(() => {\n      this.root[0].innerHTML = ''\n      this.root[0].appendChild(docFrag)\n\n      let newHTML = this.root[0].innerHTML\n\n      this.root[0].innerHTML = newHTML\n    })\n  }\n}\n\n// CONCATENATED MODULE: ./src/globals/index.js\nconst lifecycles = [\n  'Mount',\n  'Update',\n  'Unmount'\n]\n\n// CONCATENATED MODULE: ./src/core/index.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return core_Labile; });\n\n\n\n\nclass core_Labile extends StateObject {\n  constructor (obj) {\n    super(obj.state);\n\n    (async function () {\n      setTimeout(() => {\n        this.fireLifeCycle('Mount')\n        this.mounted = true\n      }, 0)\n    }).bind(this)()\n\n    this.buildLifeCycle()\n\n    this.virtualdom = new virtualdom_VirtualDOM(obj.root || null, this.getStateObject())\n  }\n\n  updateComponent () {\n    if (this.mounted !== undefined) {\n      this.fireLifeCycle('Update')\n    }\n\n    this.virtualdom.buildDOM(this.getStateObject())\n  }\n\n  buildLifeCycle () {\n    for (let event of lifecycles) {\n      this['on' + event] = (func) => {\n        this['on' + event + 'Method'] = func\n\n        return this\n      }\n    }\n  }\n\n  fireLifeCycle (event) {\n    if (typeof this['on' + event + 'Method'] === 'function') {\n      this['on' + event + 'Method']()\n    }\n  }\n}\n\n\n//# sourceURL=webpack://Labile/./src/core/index.js_+_4_modules?")}]);