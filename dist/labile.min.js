var Labile=function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(module,exports,__webpack_require__){eval("module.exports = __webpack_require__(1).default\n\n\n//# sourceURL=webpack://Labile/./index.js?")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/core/state/index.js\nclass StateObject {\n  constructor (state) {\n    if (typeof state === 'object' || state === undefined) {\n      this.buildState(this, state)\n    } else {\n      throw new Error('Type Error: data passed is not an object')\n    }\n  }\n\n  buildState (object, data) {\n    for (let dataKey in data) {\n      let state = this.buildAttribute(object, { key: dataKey, value: data[dataKey] })\n\n      if (typeof data[dataKey] === 'object') {\n        this.buildState(state, data[dataKey])\n      }\n    }\n  }\n\n  buildAttribute (object, data) {\n    object['_' + data.key] = data.value\n\n    object.__defineGetter__(data.key, () => {\n      return object['_' + data.key]\n    })\n\n    object.__defineSetter__(data.key, val => {\n      object['_' + data.key] = val\n\n      this.updateComponent()\n    })\n\n    return object['_' + data.key]\n  }\n\n  getStateObject (object = this) {\n    let stateObject = {}\n\n    for (let prop of Object.keys(object)) {\n      if (prop[0] === '_') {\n        if (typeof object[prop] === 'object') {\n          stateObject[prop.replace('_', '')] = this.getStateObject(object[prop])\n        } else {\n          stateObject[prop.replace('_', '')] = object[prop]\n        }\n      }\n    }\n\n    return stateObject\n  }\n}\n\n// CONCATENATED MODULE: ./src/core/virtualdom/index.js\nclass VirtualDOM {\n  constructor (root, state) {\n    this.root = root\n\n    this.state = state\n\n    this.sotDOM = this.mapDOM(root)\n\n    this.currentVirtualDOM = []\n\n    this.buildDOM(state)\n  }\n\n  mapDOM (root) {\n    root.constructor.name === 'HTMLCollection' ? root[0].normalize() : root.normalize()\n\n    return (function mapNode (domRoot = document.getElementsByTagName('body')) {\n      const nodeArray = []\n\n      for (let node of domRoot) {\n        if (node.nodeType === 1 && node.nodeName !== 'SCRIPT') {\n          const attributeMap = () => {\n            let attributes = {}\n\n            for (let attribute of node.attributes) {\n              attributes[attribute.name] = attribute.value\n            }\n\n            return attributes\n          }\n\n          nodeArray.push({\n            type: node.nodeName,\n            attributes: attributeMap(),\n            children: node.childNodes.length ? mapNode(node.childNodes) : []\n          })\n        } else {\n          if (node.nodeType === 3) {\n            nodeArray.push({\n              type: '#text',\n              text: node.nodeValue\n            })\n          }\n        }\n      }\n      return nodeArray\n    })(root)\n  }\n\n  replaceState (text) {\n    for (let key of Object.keys(this.state)) {\n      if (key[0] !== '_') {\n        text = text.replace(new RegExp('{{2} ?' + key + ' ?}{2}', 'g'), this.state[key])\n      }\n    }\n\n    return text\n  }\n\n  buildNewVirtualDOM () {\n    this.currentVirtualDOM = function applyState (root) {\n      const nodeArray = []\n\n      for (let node of root) {\n        if (node.type !== '#text') {\n          const attributeMap = () => {\n            let attributes = {}\n\n            for (let attribute of Object.keys(node.attributes)) {\n              attributes[this.replaceState(attribute)] = this.replaceState(node.attributes[attribute])\n            }\n\n            return attributes\n          }\n\n          nodeArray.push({\n            type: node.type,\n            attributes: attributeMap(),\n            children: applyState.bind(this)(node.children, {})\n          })\n        } else {\n          nodeArray.push({\n            type: node.type,\n            text: this.replaceState(node.text)\n          })\n        }\n      }\n\n      return nodeArray\n    }.bind(this)(this.sotDOM)\n\n    return this.currentVirtualDOM\n  }\n\n  buildDOM (state) {\n    this.state = state\n    let docFrag = (function buildHTML (root, vDOM) {\n      for (let element of vDOM) {\n        if (element.type !== '#text') {\n          let newElement = document.createElement(element.type)\n\n          for (let key of Object.keys(element.attributes)) {\n            newElement.setAttribute(key, element.attributes[key])\n          }\n\n          newElement = buildHTML(newElement, element.children)\n          newElement.normalize()\n          root.appendChild(newElement)\n        } else {\n          let newTextElement = document.createTextNode(element.text)\n          root.appendChild(newTextElement)\n        }\n      }\n\n      return root\n    })(document.createDocumentFragment(), this.buildNewVirtualDOM()[0].children)\n\n    window.requestAnimationFrame(() => {\n      this.root[0].innerHTML = ''\n      this.root[0].appendChild(docFrag)\n\n      let newHTML = this.root[0].innerHTML\n\n      this.root[0].innerHTML = newHTML\n    })\n  }\n}\n\n// CONCATENATED MODULE: ./src/globals/index.js\nconst lifecycles = [\n  'Mount',\n  'Update',\n  'Unmount'\n]\n\n// CONCATENATED MODULE: ./src/core/index.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return core_Labile; });\n\n\n\n\nclass core_Labile extends StateObject {\n  constructor (obj) {\n    super(obj.state);\n\n    (async function () {\n      setTimeout(() => {\n        this.fireLifeCycle('Mount')\n        this.mounted = true\n      }, 0)\n    }).bind(this)()\n\n    this.buildLifeCycle()\n\n    this.virtualdom = new VirtualDOM(obj.root || null, this.getStateObject())\n  }\n\n  updateComponent () {\n    if (this.mounted !== undefined) {\n      this.fireLifeCycle('Update')\n    }\n\n    this.virtualdom.buildDOM(this.getStateObject())\n  }\n\n  buildLifeCycle () {\n    for (let event of lifecycles) {\n      this['on' + event] = (func) => {\n        this['on' + event + 'Method'] = func\n\n        return this\n      }\n    }\n  }\n\n  fireLifeCycle (event) {\n    if (typeof this['on' + event + 'Method'] === 'function') {\n      this['on' + event + 'Method']()\n    }\n  }\n}\n\n\n//# sourceURL=webpack://Labile/./src/core/index.js_+_3_modules?")}]);